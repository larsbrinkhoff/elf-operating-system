	.NLIST
;	ELF75C.3
;	THE FOLLOWING MACRO IS USED TO GENERATE FIELDS FOR TABLE DEFINITIONS
;	MACROS THAT USE IT SHOULD SET ..OFST=0
	.MACRO	GENFLD	FLDNAM,FLDLEN
FLDNAM	=	..OFST
..OFST	=	..OFST+FLDLEN
	.ENDM

	.MACRO	$DFSVT			;DEFINE SYSTEM VECTOR TABLE
..OFST	=	0			;INITIALIZE OFFSET
SVTADR	=	44			;LOCATION OF SVT ADDRESS
	GENFLD	SVADCT,2		;ACTIVE DCT
	GENFLD	SVAPCT,2		;ACTIVE PCT
	GENFLD	SVAPID,1		;ACTIVE PID
	GENFLD	SVAVID,1		;ACTIVE VID
	GENFLD	SVAPVT,2		;A(PCT VECTOR TABLE)
	GENFLD	SVAVVT,2		;A(VSM VECTOR TABLE)
	GENFLD	SVADNT,2		;A(DCT NAME TABLE)
	GENFLD	SVTLEN,2		;SYSTEM VECTOR TABLE LENGTH
	.ENDM	$DFSVT

	.MACRO	$DFDCT
;
;
;DCT-DEVICE CONTROL TABLE
;
;
;	-FRONT SECTION-
;	-COMMON TO ALL DCTS-
;
DCTW4	=	-^O12			;DCT WORK WORD 4
DCTW3	=	DCTW4+2			;DCT WORK WORD 3
DCTW2	=	DCTW3+2			;DCT WORK WORD 2
DCTW1	=	DCTW2+2			;DCT WORK WORD 1
DCTW0	=	DCTW1+2			;DCT WORK WORD 0
DCTQH	=	DCTW0+2			;DEVICE-Q HEAD
DCTQT	=	DCTQH+2			;DEVICE-Q TAIL
DCTNAM	=	DCTQT+2			;DEVICE NAME(RAD50)
DCTUN	=	DCTNAM+2		;DEVICE UNIT NUMBER
DCTCSR	=	DCTUN+2			;DEVICE STATUS REG ADR
DCTWST	=	DCTCSR+2		;DCT WAIT STATE
DCTCSI	=	DCTWST+1		;DCT GRANTED CHNL SEMAPHORE ID
DCTPC	=	DCTCSI+1		;DCT PROGRAM CNTR/STATE VARIABLE
DCTICT	=	DCTPC+2			;ICT ADDRESS LIST
DCTSTT	=	DCTICT+2		;DEVICE STATE
DCTIXC	=	DCTSTT+1		;IOX CODE
DCTMPA	=	DCTIXC+1		;MASTER-A PCT ID
DCTMPB	=	DCTMPA+1		;MASTER-B PCT ID
DCTIQA	=	DCTMPB+1		;ACTIVE IORQE-A
DCTIQB	=	DCTIQA+2		;ACTIVE IORQE-B
DCTABA	=	DCTIQB+2		;AUX BUFFER ADDRESS
DCTPRM	=	DCTABA+2		; DEVICE PARAMETERS;
;
;	-MIDDLE SECTION-
;	-COMMON TO ALL EXCEPT IPP DCTS-
;
DCTCHI	=	DCTPRM+1		;SHARED CHANNEL NUMBER
DCTCAP	=	DCTCHI+1		;DEVICE CAPABILITIES
DCTABS	=	DCTCAP+2		;AUX BUFF MAX SIZE
DCTDVA	=	DCTABS+2		;DRIVER START ADDRESS
DCTFCN	=	DCTDVA+2		;FUNCTION
DCTSTA	=	DCTFCN+2		;STATUS
DCTBR	=	DCTSTA+2		;# BYTES REQUESTED
DCTBX	=	DCTBR+2			;# BYTES TRANSFERRED
DCTECT	=	DCTBX+2			;ERROR COUNT
;
;
;	-TAIL SECTION FOR CHARACTER XFR DCTS-
;
;
DCTNTB	=	DCTECT+1		;SPACES PER TAB
DCTLFF	=	DCTNTB+1		;FILLS PER LINE FEED
DCTCRF	=	DCTLFF+1		;FILLS PER CARRIAGE RETRN
DCTMA	=	DCTCRF+1		;MATE DCT ADR
DCTA	=	DCTMA+2			;ACTIVE CHAR ADR
DCTCNT	=	DCTA+2			;CHAR CNT
;
;	CHARACTER INPUT
DCTO	=	DCTCNT+2		;OLDEST INPUT CHAR
DCTS	=	DCTO+2			;RING BUFF START ADR
DCTE	=	DCTS+2			;RING BUFF END ADR
;
;	CHARACTER OUTPUT
DCTFIL	=	DCTCNT+2		;FILL COUNT
DCTTCT	=	DCTFIL+1		;TAB COUNT
;
;
;
;	-TAIL SECTION FOR BLK XFR DCTS-
;
DCTPAH	=	DCTECT+1		;HI-ORDER 2 BITS OF PHYS ADR(R-J)
DCTPAL	=	DCTPAH+1		;LO-ORDER 16 BITS OF PHYS ADR
DCTBSZ	=	DCTPAL+2		;BLOCK SIZE
DCTBHA	=	DCTBSZ+2		;DEV BYTE/BLOCK HI ADR
DCTBLA	=	DCTBHA+2		;DEV BYTE/BLOCK LO ADR
DCTMBX	=	DCTBLA+2		;MAX BYTE XFR
DCTNBH	=	DCTMBX+2		;# DEV BLKS - HI ORDER
DCTNBL	=	DCTNBH+2		;# DEV BLKS - LO ORDER
;
;
;
;	-TAIL SECTION FOR INTER PROCESS PORT DCTS-
;
					;DCTCHI BYTE UNUSED
DCTWQH	=	DCTPRM+2		;WRITE REQUEST QUEUE HEAD
DCTWQT	=	DCTWQH+2		;WRITE REQUEST QUEUE TAIL
DCTRQH	=	DCTWQT+2		;READ REQUEST QUEUE HEAD
DCTRQT	=	DCTRQH+2		;READ REQUEST QUEUE TAIL
;
;
	.ENDM
	.MACRO	$DFICT
;
;
;ICT - INTERRUPT CONTROL TABLE
;
;
ICTIHX	=	-4			;INTERRUPT XFR INSTR - JSR R0,@(PC)+
ICTIHA	=	ICTIHX+2		;INTERRUPT HANDLER ADDRESS
ICTIVA	=	ICTIHA+2		;INTERRUPT VECTOR ADDRESS
ICTIVP	=	ICTIVA+1		;INTERRUPT VECTOR PRIORITY
ICTCSR	=	ICTIVP+1		;INTERRUPT CSR ADR
ICTINA	=	ICTCSR+2		;INTERRUPT INIT ROUTINE ADDRESS
ICTDCT	=	ICTINA+2		;ASSOC DCT ADDRESS LIST
	.ENDM
	.MACRO	$DFPCC		;DEFINE PROCESS STATUS BITS
;
;PROCESS STATUS BYTE
;
;	BIT ASSIGNMENTS
;
;
PS.PVF	=	^O2000			;10-P/V SEMAPHORE FLAG
PS.FLT	=	^O4000			;11-FLT PT HDWR
PS.PRV	=	^O10000			;12-PRIVILEGED
PS.FZN	=	^O20000			;13-FROZEN
PS.SCH	=	^O40000			;14-PROCESS RE-SCHEDULED
PS.RQF	=	^O100000		;15-ON READY QUEUE
;
	.ENDM
	.MACRO	$DFIOR
;
;
;IORB-I/O REQUEST BLOCK
IORBL	=	2+IRBLA-IRNAM		;IORB BYTE LENGTH
;
IRNAM	=	0			;DEVICE NAME (RAD50)
IRUNIT	=	IRNAM+2			;DEVICE UNIT NUMBER
IROPC	=	IRUNIT+2		;I/O COMPLETION OP-CODE
IRUVI	=	IROPC+1			;USER BUFF VSM ID
IRUVA	=	IRUVI+1			;USER BUFF VA
IRFCN	=	IRUVA+2			;FUNCTION
IRBR	=	IRFCN+2			;# BYTES REQUESTED
IRSTA	=	IRBR+2			;STATUS
IRBX	=	IRSTA+2			;# BYTES TRANSFERRED
IRBHA	=	IRBX+2			;DEVICE ADDRESS-HI
IRBLA	=	IRBHA+2			;DEVICE ADDRESS-LO
;
;
	.ENDM
	.MACRO	$DFIOQ
;
;
;IORQE-I/O REQUEST QUEUE ELEMENT
;
IQLNK	=	0			;LINK TO NEXT IORQE
IQRSET	=	IQLNK+2			;RESET I/O REQ TO NULL
IQIPI	=	IQRSET+2		;IORB PCT ID
IQIVI	=	IQIPI+1			;IORB VSM ID
IQIVA	=	IQIVI+1			;IORB VA
IQNAM	=	IQIVA+2			;DEVICE NAME (RAD50)
IQUNIT	=	IQNAM+2			;DEVICE UNIT NUMBER
IQOPC	=	IQUNIT+2		;I/O COMPLETION OP-CODE
IQUVI	=	IQOPC+1			;USER BUFF VSM ID
IQUVA	=	IQUVI+1			;USER BUFF VA
IQFCN	=	IQUVA+2			;FUNCTION
IQBR	=	IQFCN+2			;# BYTES REQUESTED
IQSTA	=	IQBR+2			;STATUS
IQBX	=	IQSTA+2			;# BYTES TRANSFERRED
IQBHA	=	IQBX+2			;BLOCK ADDRESS-HI
IQBLA	=	IQBHA+2			;BLOCK ADDRESS-LO
IQPGN	=	IQBLA+2			;PAGE 0 PST NDX
;
	.IF EQ PMMGMT-1
IORQBL	=	IQPGN-IQLNK+10		;IORQE BYTE LENGTH
	.IFF
IORQBL	=	IQPGN-IQLNK		;IORQE BYTE LENGTH
	.ENDC
IORQWL	=	IORQBL/2		;IORQE WORD LENGTH
	.ENDM
	.MACRO	$DFIFN
;
;I/O FUNCTION WORD
;
;DEVICE DEPENDENT BITS (MSB HALF)
;
;	FOR DEVICES NAMED 'IPP':
		
	IPPSS	=100000		;IPP SEND STATUS FUNCTION
				;BHA IS SENT TO DEST. PORT'S STA
	IPPEOS	=40000		;END OF STREAM FUNCTION


;	FOR DEVICES NAMED 'TTY' BIT 15 - INPUT(0),OUTPUT(1)
;
;FCN CODES (LSB HALF)
;
;CODE + 200 INDICATES ENTRY TO BE PLACED AT HEAD OF DEVICE QUEUE
;
NOP	=	0			;NO-OP
RD	=	1			;READ
WRT	=	2			;WRITE
SPCL	=	3			;SPECIAL
WCHK	=	4			;WRITE CHECK
;
	.ENDM
	.MACRO	$DFIST
;
;I/O STATUS WORD
;
;
I.ERR	=	^O100000		;I/O ERROR
I.DONE	=	^O200			;I/O COMPLETE
;
;
;ERROR CATEGORIES(LO-BYTE)
;
I.NOP	=	0			;NOP
I.UER	=	2			;USER ERROR
I.DER	=	4			;DEVICE ERROR
;
;DEVICE CODES(HI-BYTE)
;
I.OFLN	=	^O1*^O400		;DEVICE OFF-LINE
I.EOM	=	^O2*^O400		;END OF MEDIUM
I.DAT	=	^O3*^O400		;DATA ERROR
I.OVFL	=	^O4*^O400		;DATA OVERFLOW(OVERRUN) ERROR
I.HRDE	=	^O5*^O400		;HARD DEVICE ERROR
I.EOF	=	^O6*^O400		;END OF FILE MARK
I.OTER	=	^O7*^O400		;OUTPUT ERROR
I.IPPE	=	^O10*^O400		;IPP MATE ERROR
I.RNGE	=	^O11*^O400		;RING BUFFER ERROR
I.NXME	=	^O12*^O400		;NON-EXISTENT MEMORY ERROR
I.ATTN	=	^O13*^O400		;ATTENTION ON
I.DEAD	=	^O14*^O400		;DEVICE ADDRESS ERROR
;
;
;USER CODES(HI-BYTE)
;
I.NDEV	=	^O1*^O400		;NON-EXISTENT DEVICE
I.UNDF	=	^O2*^O400		;UNDEFINED DEVICE
I.ALER	=	^O3*^O400		;DEVICE ALRDY ALLOCATED ERROR
I.FNER	=	^O4*^O400		;ILLEGAL FUNCTION ERROR
I.UNPV	=	^O5*^O400		;UNPRIVILEGED I/O REQ ERROR
I.WPER	=	^O6*^O400		;WRITE PROTECT ERROR
I.ODAD	=	^O7*^O400		;ODD ADDRESS ERROR
I.DAER	=	^O10*^O400		;DEVICE ADDRESS ERROR
;
	.ENDM

	.MACRO	$NETHW
;			HARDWARE REGISTERS
;			FOR VERY-DISTANT HOST
;			TYPE CONNECTION TO ARPA NET
;			S C R L

VDIVI = 270		;INTERRUPT VECTOR IN
VDIVO = 274		;INTERRUPT VECTOR OUT

VDHSI = 167600		;STATUS IN
VDHBI = VDHSI + 2	;DATA BUFFER IN
VDHMI = VDHSI + 4	;M.A.R. IN
VDHWI = VDHSI + 6		;W.C. IN

VDHSO = 167610		;STATUS OUT
VDHBO = VDHSO + 2		;DATA BUFFER OUT/CLOCK
VDHMO = VDHSO + 4		;M.A.R. OUT
VDHWO = VDHSO + 6		;W.C. OUT

;			BIT ALLOCATION IN STATUS REGS

VDOIE = 100		;VDH OUTPUT INTERRUPT ENABLE BIT
TMRE = 20		;TIMER RUN ENABLE
TMPT = 40		;CLOCK POINTER IN OUTPUT BUFFER
TIMI = 4		;TIMER INTERRUPT ENABLE
VDEOD = 10		;OUTPUT EOD INTERRUPT
VDIIP = 4		;DEVICE POINTER/ INPUT
VDEOT = 2		;END OF TRANSFER
	.ENDM
	.MACRO	$DFPCT
PCTNXT	=	^O0	;LINK TO NEXT PCT IN CHAIN
PCTCC	=	^O2	;PCT CONDITION CODE ($APCT POINTS HERE)
PCTWT	=	^O3	;PCT WAIT FLAG
PCTKSP	=	^O4	;PCT KERNEL STACK POINTER
PCTPRQ	=	^O6	;PROCESS READY QUEUE POINTER
PCTPID	=	^O10	;PCT ID
PCTVID	=	^O11	;VSM ID
PCTCP0	=	^O12	;TIME USED IN CURRENT SLICE
PCTTIM	=	^O14	;TOTAL TIME USED SINCE CREATION OF PROC
PCTPGF	=	^O20	;NUMBER OF PAGE FAULTS
PCTPRI	=	^O22	;CURRENT PRIORITY (ABSOLUTE SCALE)
PCTCL	=	^O24	;CREATEE-LIST LAST PROCESS CREATED (ID)
PCTSL	=	^O25	;SIBLING PROCESS LINK (BROTHER)
PCTCID	=	^O26	;CREATOR ID (PARENT PROCESS)
PCTCOP	=	^O27	;PROCESS CREATOR TERMINATION OP-CODE
PCTMQH	=	^O30	;PROCESS MESSAGE QUEUE HEAD
PCTMQT	=	^O32	;PROCESS MESSAGE QUEUE TAIL
PCTPRV	=	^O34	;POINTER TO PREVIOUS PCT IN READY LIST
PCTTAG	=	^O36	;PCT TAG FIELD (16 BITS)
PCTTRP	=	PCTTAG+2	;PCT TRAP VECTOR
PCTBPT	=	PCTTRP+4	;PCT BREAKPOINT VECTOR
PCTIOT	=	PCTBPT+4	;PCT BREAKPOINT VECTOR
PCTVIL	=	PCTIOT+4	; PCT VSM ID LIST
PCTUSL	=	PCTVIL+2	; PCT USER STACK LIST
PCTKSB	=	PCTUSL+2	;PCT KERNEL STACK BASE (70707)
PCTLEN	=	^D96	;PCT IS 96. WORDS LONG
			; NOTE -- ALSO DEFINED IN SYSTB.
	.ENDM	$DFPCT

	.MACRO	$DFVSM		;DEFINE VIRTUAL STORAGE MAP
VSMAP0	=	0		;SECTION 0 VSM -- FLAGS & PST POINTERS
VSMAP1	=	16.		;SECTION 1 VSM -- SECONDARY STORAGE ADDRS
VSMAM	=	32.		;VS ALLOCATION MAP (BIT MAP)
VSMAML	=	8192./NVASIZ	;NUMBER OF BYTES FOR ALLOCATION MAP
VSMSEM	=	VSMAM+VSMAML	;STORAGE ALLOCATION SEMAPHORE ID
VSMLEN	=	VSMSEM+2/2	;VSM TOTAL LENGTH, WORDS
	.ENDM	$DFVSM

	.MACRO	$DFVSB
;			VSM STATE BITS

VS.RES	=	100000		; RESIDENT
VS.DEF	=	40000		; DEFINED
VS.SHL	=	20000		; ON SHARE LIST
VS.ALL	=	10000		; ALLOCATED ON S.S.
VS.WSM	=	4000		; MEMBER OF A WORKING SET
VS.SHR	=	100000		; SHARED PAGE
VS.RO	=	40000		; READ-ONLY

;			PST STATE BITS


;			$PST0

PST.W	=	100000		; WRITTEN
PST.AC	=	200		; ACCESSED
PST.LF	=	77400		;LOCK CNT FIELD
PST.AF	=	177		;AGE FIELD
PST.NLF	=	100377		;NOT LOCK CNT FIELD
PST.NAF	=	177600		;NOT AGE FIELD

;			$PST1

PST.AV	=	100000		; AVAILABLE
PST.IO	=	40000		; I/O IN PROGRESS

;			$PST2

PST.SH	=	100000		; SHARABLE PAGE
PST.RO	=	40000		; READ-ONLY

	.ENDM


	.MACRO	$DFSFD
;
;SFD - SWAP FILE DESCRIPTOR
;
SFDIOR	=	0			;SFD IORB
SFDPST	=	SFDIOR+IORBL		;SFD PENDING PST NDX
SFDFCN	=	SFDPST+1		;SFD PENDING FCN(NPAG=RD,FPAG=WRT)
SFDVPA	=	SFDFCN+1		;SFD PENDING VPA
SFDQH	=	SFDVPA+2		;SFD QHEAD
SFDQT	=	SFDQH+2			;SFD QTAIL
SFDSBH	=	SFDQT+2			;SFD STARTING BLOCK NUMBER-HI
SFDSBL	=	SFDSBH+2		;SFD STARTING BLOCK NUMBER-LO
SFDNB	=	SFDSBL+2		;SFD NUMBER OF BLOCKS
;
;
	.ENDM
	.MACRO	$DFSFQ
;
;SWAP FILE QUEUE ELEMENT
;
SFQLNK	=	0			;LINK WORD
SFQPST	=	SFQLNK+2		;REQUESTED PST NDX
SFQFCN	=	SFQPST+1		;REQUESTED FCN(NPAG=RD,FPAG=WRT)
SFQVPA	=	SFQFCN+1		;REQUESTED VPA
;
	.ENDM

	.MACRO	$DFUSL
USLLNK	=	0		; LINK WORD
USLVID	=	USLLNK+2	; VSM ID
USLASP	=	USLVID+2	; ACTIVE STACK POINTER
USLBAS	=	USLASP+2	; BASE
USLL	=	USLBAS+2
	.ENDM
	.LIST
   